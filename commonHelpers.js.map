{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst inputEl = document.querySelector(\"#datetime-picker\");\nconst btnEl = document.querySelector(`button[data-start]`);\nbtnEl.disabled = true;\nlet userSelectedDate = null;\nlet countdownInterval = null;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n        if (userSelectedDate <= new Date()) {\n            iziToast.warning({\n                message: \"Please choose a date in the future\",\n            });\n            btnEl.disabled = true;\n        } else {\n            btnEl.disabled = false;\n        }\n    },\n};\n\nflatpickr(inputEl, options);\n\nbtnEl.addEventListener(`click`, () => {\n    btnEl.disabled = true;\n    inputEl.disabled = true;\n\n\n    countdownInterval = setInterval(() => {\n        const date = new Date();\n        const timeRemaining = userSelectedDate - date;\n\n\n        if (timeRemaining <= 0) {\n            clearInterval(countdownInterval);\n            updateTimer(0, 0, 0, 0);\n            inputEl.disabled = false;\n\n            return;\n        }\n\n        const { days, hours, minutes, seconds } = convertMs(timeRemaining);\n        updateTimer(days, hours, minutes, seconds);\n    }, 1000);\n});\n\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n\n    const hours = Math.floor((ms % day) / hour);\n\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction updateTimer(days, hours, minutes, seconds) {\n    document.querySelector('[data-days]').textContent = addLeadingZero(days);\n    document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n    document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n    document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n\n"],"names":["inputEl","btnEl","userSelectedDate","countdownInterval","options","selectedDates","iziToast","flatpickr","timeRemaining","updateTimer","days","hours","minutes","seconds","convertMs","ms","addLeadingZero","value"],"mappings":"+IAKA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAQ,SAAS,cAAc,oBAAoB,EACzDA,EAAM,SAAW,GACjB,IAAIC,EAAmB,KACnBC,EAAoB,KAExB,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBH,EAAmBG,EAAc,CAAC,EAC9BH,GAAoB,IAAI,MACxBI,EAAS,QAAQ,CACb,QAAS,oCACzB,CAAa,EACDL,EAAM,SAAW,IAEjBA,EAAM,SAAW,EAExB,CACL,EAEAM,EAAUP,EAASI,CAAO,EAE1BH,EAAM,iBAAiB,QAAS,IAAM,CAClCA,EAAM,SAAW,GACjBD,EAAQ,SAAW,GAGnBG,EAAoB,YAAY,IAAM,CAElC,MAAMK,EAAgBN,EADT,IAAI,KAIjB,GAAIM,GAAiB,EAAG,CACpB,cAAcL,CAAiB,EAC/BM,EAAY,EAAG,EAAG,EAAG,CAAC,EACtBT,EAAQ,SAAW,GAEnB,MACH,CAED,KAAM,CAAE,KAAAU,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAa,EACjEC,EAAYC,EAAMC,EAAOC,EAASC,CAAO,CAC5C,EAAE,GAAI,CACX,CAAC,EAGD,SAASC,EAAUC,EAAI,CAMnB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAE1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EAEpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EAEjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASJ,EAAYC,EAAMC,EAAOC,EAASC,EAAS,CAChD,SAAS,cAAc,aAAa,EAAE,YAAcG,EAAeN,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcM,EAAeL,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcK,EAAeJ,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,CACjF,CAEA,SAASG,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC"}